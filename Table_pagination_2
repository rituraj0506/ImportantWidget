import 'dart:convert';
import 'package:attendance_software/screens/admin/admin_side_drawer_page.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:http/http.dart' as http;
import '../../components/AppBar.dart';
import '../../model/admin_user_listing.dart';
import '../../utils/ApiEndPoint.dart';

class UserAdminPage extends StatefulWidget {
  const UserAdminPage({super.key});

  @override
  State<UserAdminPage> createState() => _UserAdminPageState();
}

class _UserAdminPageState extends State<UserAdminPage> {
  //late UserDataSource userDataSource;
  int pageNumber = 1;
  int totalPageNumber = 1;
  List<UserAdmin> userListing = [];
  bool isLoading = false;

  String toCamelCase(String str) {
    return str.split(' ').map((word) {
      String lower = word.toLowerCase();
      return lower[0].toUpperCase() + lower.substring(1);
    }).join(' ');
  }

  @override
  void initState() {
    // TODO: implement initState
    super.initState();
    fetchUserListing(pageNumber, "");
  }

  // Helper to display page numbers with ellipses if necessary
  List<int> getPageNumbersToDisplay() {
    List<int> pages = [];

    if (totalPageNumber <= 6) {
      // If total pages are less than or equal to 6, show all page numbers
      pages = List<int>.generate(totalPageNumber, (index) => index + 1);
    } else {
      if (pageNumber <= 3) {
        // If user is on one of the first 3 pages, show first 4 pages, ellipsis, and last page
        pages = [1, 2, 3, 4, -1, totalPageNumber];
      } else if (pageNumber >= totalPageNumber - 2) {
        // If user is on one of the last 3 pages, show last 4 pages, ellipsis, and first page
        pages = [
          1,
          -1,
          totalPageNumber - 3,
          totalPageNumber - 2,
          totalPageNumber - 1,
          totalPageNumber
        ];
      } else {
        // If user is somewhere in the middle, show current page, surrounding pages, and ellipses
        pages = [
          1,
          -1,
          pageNumber - 1,
          pageNumber,
          pageNumber + 1,
          -1,
          totalPageNumber
        ];
      }
    }

    return pages;
  }

  void _onPageChange(int newPage) {
    if (newPage != pageNumber) {
      pageNumber = newPage;
      fetchUserListing(pageNumber, "");
    }
  }

  Future<void> fetchUserListing(int pageNumber, String search) async {
    setState(() {
      isLoading = true; // Set loading state to true
    });
    try {
      SharedPreferences preferences = await SharedPreferences.getInstance();
      var token = preferences.getString("token") ?? "";

      String apiUrl =
          '${ApiEndPoints.baseUrl}${ApiEndPoints.authEndPoint.userApi}?page=$pageNumber&limit=10&sort=desc&search=$search';
      final Map<String, String> headers = {
        'Content-Type': 'application/x-www-form-urlencoded',
        'Accept': 'application/json',
        'Authorization': 'Bearer $token'
      };
      final response = await http.get(Uri.parse(apiUrl), headers: headers);

      if (response.statusCode == 200) {
        final data = jsonDecode(response.body);
        if (data is Map<String, dynamic> && data.containsKey('users')) {
          final responseData = AdminUserListing.fromJson(data);

          setState(() {
            userListing = responseData.users;
            totalPageNumber = responseData.totalPages;
            // userDataSource=UserDataSource(userListing);
          });
        } else {
          throw Exception('Invalid response format');
        }
      } else {}
    } catch (e) {
      if (kDebugMode) {
        print(e);
      }
    } finally {
      setState(() {
        isLoading = false; // Set loading state to false
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    final screenWidth = MediaQuery.of(context).size.width;
    final screenHeight = MediaQuery.of(context).size.height;
    return Scaffold(
      body: LayoutBuilder(builder: (context, constraints) {
        if (constraints.maxWidth > 800) {
          return Container(
            width: screenWidth,
            height: screenHeight,
            decoration: const BoxDecoration(color: Colors.white),
            child: Row(
              mainAxisAlignment: MainAxisAlignment.start,
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                //side Drawer
                Container(
                    width: screenWidth * 0.18,
                    decoration: const BoxDecoration(color: Color(0xFF0084A1)),
                    child: const AdminSideDrawer(
                      isCollapsed: false,
                      selectedIndex: 1,
                    )),

                //body
                Container(
                  width: screenWidth * 0.82,
                  decoration: const BoxDecoration(color: Colors.white),
                  child: Column(
                    children: [
                      Container(
                        height: screenHeight * 0.075,
                        width: screenWidth,
                        decoration:
                            const BoxDecoration(color: Color(0XFFF2F2F2)),
                        child: Appbar(
                          isCollapsed: false,
                          userName: 'Kavya Mittal',
                          email: 'kavya@scriza.in',
                        ),
                      ),
                      Padding(
                        padding: const EdgeInsets.all(8.0),
                        child: SizedBox(
                          height: screenHeight * 0.90,
                          width: screenWidth,
                          child: Card(
                            color: Colors.white,
                            elevation: 10,
                            child: Column(
                              children: [
                                const Padding(
                                  padding: EdgeInsets.fromLTRB(10, 0, 10, 0),
                                  child: Divider(
                                    thickness: 2,
                                    color: Colors.black54,
                                  ),
                                ),

                                Padding(
                                  padding: const EdgeInsets.all(8.0),
                                  child: Row(
                                    mainAxisAlignment:
                                        MainAxisAlignment.spaceBetween,
                                    children: [
                                      const Padding(
                                        padding: EdgeInsets.all(8.0),
                                        child: Row(
                                          children: [
                                            Text(
                                              "Home > ",
                                              style: TextStyle(
                                                  color: Color(0XFF000000),
                                                  fontWeight: FontWeight.w800),
                                            ),
                                            Text(
                                              "Users",
                                              style: TextStyle(
                                                  color: Color(0XFF007DBB),
                                                  fontWeight: FontWeight.w800),
                                            ),
                                          ],
                                        ),
                                      ),
                                      ElevatedButton(
                                        onPressed: () {
                                          Navigator.pushNamed(
                                              context, 'createUserPage');
                                        },
                                        style: ElevatedButton.styleFrom(
                                          backgroundColor:
                                              const Color(0XFF007DBB),
                                          padding: const EdgeInsets.symmetric(
                                              horizontal: 30, vertical: 15),
                                          shape: RoundedRectangleBorder(
                                            borderRadius:
                                                BorderRadius.circular(5.0),
                                          ),
                                        ),
                                        child: const Text(
                                          '+ Add Users',
                                          style: TextStyle(
                                              color: Colors.white,
                                              fontWeight: FontWeight.w800),
                                        ),
                                      ),
                                    ],
                                  ),
                                ),

                                const Padding(
                                  padding: EdgeInsets.fromLTRB(10, 0, 10, 0),
                                  child: Divider(
                                    thickness: 2,
                                    color: Colors.black54,
                                  ),
                                ),

                                Padding(
                                  padding:
                                      const EdgeInsets.fromLTRB(8, 0, 8, 8),
                                  child: SizedBox(
                                    width: screenWidth * 0.8,
                                    // height: screenHeight,
                                    child: DataTable(
                                      headingRowColor: WidgetStateProperty
                                          .resolveWith<Color>(
                                        (Set<WidgetState> states) {
                                          return const Color(
                                              0xff9bd8fa); // Change this to your preferred color
                                        },
                                      ),
                                      columnSpacing: constraints.minHeight,
                                      dataRowHeight: 50,
                                      showBottomBorder: true,
                                      columns: const <DataColumn>[
                                        DataColumn(
                                            label: Center(
                                          child: Text(
                                            'Employee Id',
                                            style: TextStyle(
                                                color: Color(0XFF007DBB),
                                                fontWeight: FontWeight.w600),
                                          ),
                                        )),
                                        DataColumn(
                                            label: Center(
                                          child: Text(
                                            'Name',
                                            style: TextStyle(
                                                color: Color(0XFF007DBB),
                                                fontWeight: FontWeight.w600),
                                          ),
                                        )),
                                        DataColumn(
                                            label: Center(
                                          child: Text(
                                            'Address',
                                            style: TextStyle(
                                                color: Color(0XFF007DBB),
                                                fontWeight: FontWeight.w600),
                                          ),
                                        )),
                                        DataColumn(
                                            label: Text(
                                          'Role',
                                          style: TextStyle(
                                              color: Color(0XFF007DBB),
                                              fontWeight: FontWeight.w600),
                                        )),
                                        DataColumn(
                                            label: Center(
                                          child: Text(
                                            'Mobile No',
                                            style: TextStyle(
                                                color: Color(0XFF007DBB),
                                                fontWeight: FontWeight.w600),
                                          ),
                                        )),
                                        DataColumn(
                                            label: Center(
                                          child: Text(
                                            'Email Id',
                                            style: TextStyle(
                                                color: Color(0XFF007DBB),
                                                fontWeight: FontWeight.w600),
                                          ),
                                        )),
                                        DataColumn(
                                            label: Center(
                                          child: Text(
                                            'Status',
                                            style: TextStyle(
                                                color: Color(0XFF007DBB),
                                                fontWeight: FontWeight.w600),
                                          ),
                                        )),
                                        DataColumn(
                                            label: Center(
                                          child: Text(
                                            'Action',
                                            style: TextStyle(
                                                color: Color(0XFF007DBB),
                                                fontWeight: FontWeight.w600),
                                          ),
                                        )),
                                      ],
                                      rows: List<DataRow>.generate(
                                        userListing.length,
                                        //companyList.length,
                                        (index) => DataRow(
                                          color: WidgetStateProperty
                                              .resolveWith<Color>(
                                            (Set<WidgetState> states) {
                                              // Set alternating background color
                                              return index.isEven
                                                  ? const Color(0XFFF2F3F6)
                                                  : Colors.white;
                                            },
                                          ),
                                          cells: <DataCell>[
                                            DataCell(
                                              Text(userListing[index]
                                                  .userDetails!
                                                  .employeeId),
                                            ),
                                            DataCell(
                                              Text(
                                                toCamelCase(userListing[index]
                                                    .userDetails!
                                                    .name),
                                              ),
                                            ),
                                            DataCell(
                                              Text(
                                                toCamelCase(userListing[index]
                                                    .personalDetails!
                                                    .address),
                                              ),
                                            ),
                                            DataCell(
                                              Text(userListing[index]
                                                  .userDetails!
                                                  .role),
                                            ),
                                            DataCell(
                                              Text(userListing[index]
                                                  .personalDetails!
                                                  .mobileNumber),
                                            ),
                                            DataCell(
                                              Text(userListing[index]
                                                  .personalDetails!
                                                  .emailId),
                                            ),
                                           
                                            
                                            // DataCell(
                                            //     Text(companyList[index].)),
                                            DataCell(Text("Active")),
                                            DataCell(
                                              InkWell(
                                                onTap: () {},
                                                child: const Icon(
                                                  Icons.edit_document,
                                                  color: Colors.blue,
                                                ),
                                              ),
                                            ),
                                          ],
                                        ),
                                      ),
                                    ),
                                  ),
                                ),

                                Padding(
                                  padding: const EdgeInsets.all(16.0),
                                  child: Row(
                                    mainAxisAlignment: MainAxisAlignment.end,
                                    children: [
                                      IconButton(
                                        icon: const Icon(Icons.arrow_back_ios),
                                        onPressed: pageNumber > 1
                                            ? () =>
                                                _onPageChange(pageNumber - 1)
                                            : null,
                                      ),
                                      Row(
                                        children: getPageNumbersToDisplay()
                                            .map((page) {
                                          if (page == -1) {
                                            return const Text(
                                                '...'); // Ellipsis
                                          } else {
                                            return Padding(
                                              padding:
                                                  const EdgeInsets.symmetric(
                                                      horizontal: 4.0),
                                              child: InkWell(
                                                onTap: () {
                                                  if (page != pageNumber) {
                                                    _onPageChange(page);
                                                  }
                                                },
                                                // style: ElevatedButton.styleFrom(
                                                //   backgroundColor: page == pageNumber ? Colors.blue : Colors.grey,
                                                // ),
                                                child: Container(
                                                    decoration: BoxDecoration(
                                                        color: page ==
                                                                pageNumber
                                                            ? Colors.blue
                                                            : Colors.black12,
                                                        border: Border.all(
                                                          color:
                                                              page == pageNumber
                                                                  ? Colors.blue
                                                                  : Colors.grey,
                                                          width: 1,
                                                        ),
                                                        borderRadius:
                                                            BorderRadius
                                                                .circular(5)),
                                                    child: Padding(
                                                      padding: const EdgeInsets
                                                          .fromLTRB(8, 4, 8, 4),
                                                      child: Text(
                                                        page.toString(),
                                                        style: TextStyle(
                                                          color: page ==
                                                                  pageNumber
                                                              ? Colors.white
                                                              : Colors.black,
                                                        ),
                                                      ),
                                                    )),
                                              ),
                                            );
                                          }
                                        }).toList(),
                                      ),
                                      IconButton(
                                        icon:
                                            const Icon(Icons.arrow_forward_ios),
                                        onPressed: pageNumber < totalPageNumber
                                            ? () =>
                                                _onPageChange(pageNumber + 1)
                                            : null,
                                      ),
                                      const SizedBox(width: 20),
                                      _goToPageInput(),
                                    ],
                                  ),
                                ),
                              ],
                            ),
                          ),
                        ),
                      )
                    ],
                  ),
                )
              ],
            ),
          );
        } else {
          return Container(
            width: screenWidth,
            height: screenHeight,
            decoration: const BoxDecoration(color: Colors.white),
            child: Row(
              mainAxisAlignment: MainAxisAlignment.start,
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                //side Drawer
                Container(
                    width: screenWidth * 0.10,
                    decoration: const BoxDecoration(color: Color(0xFF0084A1)),
                    child: const AdminSideDrawer(
                        isCollapsed: false, selectedIndex: 1)),

                //body
                Container(
                  width: screenWidth * 0.90,
                  decoration: const BoxDecoration(color: Colors.white),
                  child: Column(
                    children: [
                      Container(
                        height: screenHeight * 0.075,
                        width: screenWidth,
                        decoration:
                            const BoxDecoration(color: Color(0XFFF2F2F2)),
                        child: Appbar(
                          isCollapsed: false,
                          userName: 'Kavya Mittal',
                          email: 'kavya@scriza.in',
                        ),
                      ),
                      Padding(
                        padding: const EdgeInsets.all(8.0),
                        child: SizedBox(
                          height: screenHeight * 0.90,
                          width: screenWidth,
                          child: Card(
                            color: Colors.white,
                            elevation: 10,
                            child: Column(
                              children: [
                                const Padding(
                                  padding: EdgeInsets.fromLTRB(10, 0, 10, 0),
                                  child: Divider(
                                    thickness: 2,
                                    color: Colors.black54,
                                  ),
                                ),
                                Padding(
                                  padding: const EdgeInsets.all(8.0),
                                  child: Row(
                                    mainAxisAlignment:
                                        MainAxisAlignment.spaceBetween,
                                    children: [
                                      const Padding(
                                        padding: EdgeInsets.all(8.0),
                                        child: Row(
                                          children: [
                                            Text(
                                              "Home > ",
                                              style: TextStyle(
                                                  color: Color(0XFF000000),
                                                  fontWeight: FontWeight.w800),
                                            ),
                                            Text(
                                              "Announcement",
                                              style: TextStyle(
                                                  color: Color(0XFF007DBB),
                                                  fontWeight: FontWeight.w800),
                                            ),
                                          ],
                                        ),
                                      ),
                                      ElevatedButton(
                                        onPressed: () {
                                          setState(() {
                                            // _isSidebarVisible=!_isSidebarVisible;
                                          });
                                        },
                                        style: ElevatedButton.styleFrom(
                                          backgroundColor:
                                              const Color(0XFF007DBB),
                                          padding: const EdgeInsets.symmetric(
                                              horizontal: 30, vertical: 15),
                                          shape: RoundedRectangleBorder(
                                            borderRadius:
                                                BorderRadius.circular(5.0),
                                          ),
                                        ),
                                        child: const Text(
                                          '+ Add Announcement',
                                          style: TextStyle(
                                              color: Colors.white,
                                              fontWeight: FontWeight.w800),
                                        ),
                                      ),
                                    ],
                                  ),
                                ),
                                const Padding(
                                  padding: EdgeInsets.fromLTRB(10, 0, 10, 0),
                                  child: Divider(
                                    thickness: 2,
                                    color: Colors.black54,
                                  ),
                                ),
                              ],
                            ),
                          ),
                        ),
                      )
                    ],
                  ),
                )
              ],
            ),
          );
        }
      }),
    );
  }

  Widget _goToPageInput() {
    TextEditingController pageController = TextEditingController();

    return Row(
      children: [
        const Text("Go To Page: "),
        SizedBox(
          width: 50,
          child: TextField(
            controller: pageController,
            keyboardType: TextInputType.number,
            decoration: const InputDecoration(
              border: OutlineInputBorder(),
            ),
          ),
        ),
        const SizedBox(
          width: 10,
        ),
        ElevatedButton(
          onPressed: () {
            int? page = int.tryParse(pageController.text);
            if (page != null && page >= 1 && page <= totalPageNumber) {
              _onPageChange(page);
            }
          },
          child: const Text("Go"),
        ),
      ],
    );
  }

  void createUser() {
    Navigator.pushReplacement(context, 'createUserPage' as Route<Object?>);
  }
}

